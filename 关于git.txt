Git 命令列表：

git init:创建当前目录为项目仓库
git status:查看当前git的状态
git log：查看git 提交记录
git branch:查看当前项目分支
git branch a:新建分支a
git checkout a：进入分支a
git branch -d a：删除分支a
git merge a：合并分支a（需要进入主分支）

git add a.txt :将a.txt加到git项目中（使用git add . 表示添加所以文件）
git commit -m 'first commit'：提交项目 -m表示注释信息

git diff：查看当前目录下未提交的改动
git diff <$id1> <$id2>   # 比较两次提交之间的差异
git diff <branch1>..<branch2> # 在两个分支之间比较 
git diff --staged   # 比较暂存区和版本库差异

$ git reset --hard HEAD^：会退到上个版本（^表示回退的版本次数）
$ git reset HEAD "file":回滚到当前的版本（撤销缓存区的修改）
$ git reset --hard 3628164：如果要回退后要前进到新的版本，可以指定commit id号

git checkout -- file:把file文件回滚到git add 或者git commit之后的状态（删除改动）

远程：
git clone git@github.com:AierYoung/test.git:clone项目到本地
git remote add origin git@github.com:AierYoung/test.git：关联本地项目
git pull origin master:获取远程项目
git push origin master:提交本地项目

因此，多人协作的工作模式通常是这样：

首先，可以试图用git push origin branch-name推送自己的修改；

如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；

如果合并有冲突，则解决冲突，并在本地提交；

没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功！

如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name。

这就是多人协作的工作模式，一旦熟悉了，就非常简单。